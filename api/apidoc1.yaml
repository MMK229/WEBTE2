
openapi: 3.0.0
info:
  title: Test API 
  version: 1.0.0
  description: WEBTE2

paths:
  /skuska/api/api.php:
    get:
      summary: Získať všetky otázky
      tags: [Test]
      operationId: getAllQuestions
      parameters:
        - name: route
          in: query
          required: true
          schema:
            type: string
            enum: [questions]
          example: questions
      responses:
        '200':
          description: Zoznam otázok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Question'

    post:
      summary: Uložiť nový test
      tags: [Test]
      operationId: storeTest
      parameters:
        - name: route
          in: query
          required: true
          schema:
            type: string
            enum: [tests]
          example: tests
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required: [user_id, city, country, questions]
              properties:
                user_id:
                  type: integer
                  example: 1
                city:
                  type: string
                  example: Bratislava
                country:
                  type: string
                  example: Slovensko
                questions:
                  type: array
                  items:
                    type: object
                    required: [question_id, answered_correctly, time_taken]
                    properties:
                      question_id: { type: integer, example: 1 }
                      answered_correctly: { type: boolean, example: true }
                      time_taken: { type: number, example: 3.5 }
      responses:
        '201':
          description: Test uložený
          content:
            application/json:
              schema:
                properties:
                  message: { type: string, example: Test uložený }
                  test_id: { type: integer, example: 42 }
        '400':
          description: Neplatné dáta
        '401':
          description: Neautorizovaný

  /skuska/api/api.php?route=questions/1:
    get:
      summary: Získať otázku podľa ID
      tags: [Test]
      operationId: getQuestionById
      parameters:
        - name: route
          in: query
          required: true
          schema:
            type: string
            example: questions/1
      responses:
        '200':
          description: Detail otázky
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Question'
        '404':
          description: Otázka neexistuje

  /skuska/api/api.php?route=tests/3:
    get:
      summary: Získať výsledok testu podľa ID
      tags: [Test]
      operationId: getTestResult
      parameters:
        - name: route
          in: query
          required: true
          schema:
            type: string
            example: tests/3
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Výsledok testu
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    area: { type: string, example: Matematika }
                    text_sk: { type: string, example: Koľko je 2+2? }
                    answered_correctly: { type: boolean, example: true }
                    time_taken: { type: number, example: 4.2 }
        '401':
          description: Neautorizovaný

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
  schemas:
    Question:
      type: object
      required: [area, text_sk, text_en, correct_answer]
      properties:
        id: { type: integer, example: 1 }
        area: { type: string, example: Matematika }
        text_sk: { type: string, example: Koľko je 2+2? }
        text_en: { type: string, example: What is 2+2? }
        correct_answer: { type: string, example: 4 }
